




phoneme a
  vwl  starttype #e  endtype #@
  ipa æ
  length 210

  ChangeIfDiminished(a#)

  IF nextPh(isNasal) AND NOT KlattSynth THEN
    FMT(vnasal/ee_n2)
  ELSEIF nextPh(r) AND thisPh(isStressed) THEN
    length 190
    FMT(vwl_en_us/ar)
  ENDIF
  FMT(vwl_en_us/a)
endphoneme

phoneme aa
  import_phoneme en-tengwar-us/a
endphoneme

phoneme a#
  vwl  starttype #@  endtype #@
  ipa ɐ
  unstressed
  length 150

  IF thisPh(isStressed) THEN
    ChangePhoneme(a)
  ENDIF

  IF nextPhW(r) THEN
    ChangePhoneme(3)
  ENDIF
  
  FMT(vowel/a#_3)
endphoneme

phoneme A#
  vwl  starttype #a  endtype #a
  ChangePhoneme(A:)
endphoneme

phoneme A:
  vwl  starttype #a  endtype #a
  length 220
  IF nextPhW(r) THEN
    FMT(vwl_en_us/aar)
  ENDIF
  FMT(vowel/aa_8)
endphoneme

phoneme A@
  vwl  starttype #a  endtype #a
  ipa ɑː|ɹ
  IF nextPh(r-) OR nextPh(r-2) THEN
    ipa ɑː
  ENDIF
  length 260
  IfNextVowelAppend(r-2)
  FMT(vwl_en_us/aar)
endphoneme

phoneme aI
  vwl  starttype #a  endtype #i
  length 240
  IF nextPh(#a) OR nextPh(#o) THEN
    AppendPhoneme(;)
  ENDIF
  FMT(vwl_en_us/ai)
endphoneme

phoneme aI3
  vwl  starttype #a  endtype #@
  length 310
  ipa aɪɚ
  IfNextVowelAppend(r-)
  FMT(vwl_en_us/ai3)
endphoneme

phoneme aI@
  vwl  starttype #a  endtype #@
  length 300
  ipa aɪə
  IfNextVowelAppend(r-)
  FMT(vwl_en_us/ai@)
endphoneme

phoneme aU
  vwl  starttype #a  endtype #o
  length 235
  FMT(vdiph/aoo)
endphoneme

phoneme aU@
  vwl  starttype #a   endtype #@
  length 300
  ipa aɪʊɹ
  IF nextPhW(r) THEN
    ipa aɪʊ
  ENDIF
  IfNextVowelAppend(r)
  FMT(vwl_en_us/aU@)
endphoneme



// This is discussable, is it more like rp or more like gb ??
phoneme e# // **E**XPLORE
  vwl
  ChangePhoneme(E)
endphoneme

phoneme E
  vwl  starttype #e  endtype #e
  length 190
  IF nextPhW(n) THEN
    ChangeIfDiminished(@)
  ELSE
    ChangeIfDiminished(I2)
  ENDIF
  FMT(vwl_en_us/ee)
endphoneme

phoneme e@
  vwl  starttype #e  endtype #@
  length 260
  ipa ɛ|ɹ
  IF nextPhW(r) THEN
    ipa ɛ
  ENDIF
  IfNextVowelAppend(r)
  FMT(vwl_en_us/er)
endphoneme

phoneme eI
  vwl  starttype #e  endtype #i
  length 220
  FMT(vdiph2/ei_4)
//  FMT(vdiph/eei_5)
endphoneme






phoneme i
  vwl  starttype #i  endtype #i
  unstressed
  ipa i
  length 170
  IfNextVowelAppend(;)

  IF NOT thisPh(isFinalVowel) THEN
    length 130
    FMT(vowel/ii_4)
  ENDIF

  FMT(vowel/ii_final)
endphoneme

phoneme i:
  vwl  starttype #i  endtype #i
  length 180
  IfNextVowelAppend(;)
  FMT(vowel/i_en)
endphoneme

phoneme I
  vwl  starttype #i endtype #i
  length 160
  IfNextVowelAppend(;)
  ChangeIfDiminished(I2)
  
  IF nextPhW(r) THEN
    length 200
  ENDIF

  FMT(vowel/ii_4)
endphoneme

phoneme I#
  vwl  starttype #i  endtype #i
  unstressed
  length 160
  ipa ᵻ
//  FMT(vowel/@_fnt)
  FMT(vowel/ii#)
endphoneme

phoneme I2#
  vwl  starttype #i  endtype #i
  unstressed
  ChangePhoneme(I#)
endphoneme

phoneme i@
  vwl  starttype #i  endtype #@
  length 250
  FMT(vdiph2/ii@)  // don't append [r] before a vowel
endphoneme

phoneme i@3
  vwl  starttype #i  endtype #@
  length 280
  ipa ɪ|ɹ
  IF nextPhW(r) THEN
    ipa ɪ
  ENDIF
  IfNextVowelAppend(r)
  FMT(vwl_en_us/ir)
endphoneme



phoneme V
  vwl  starttype #a  endtype #@
  length 170
  ChangeIfDiminished(@)
  FMT(vowel/V_6)
endphoneme

phoneme u:
  vwl  starttype #u  endtype #u
  length 190
  
  IF prevPhW(j)  AND NOT thisPh(isWordEnd) THEN
    length 160
  ENDIF
  
  FMT(vdiph2/uw_6)
endphoneme

phoneme U
  vwl  starttype #o  endtype #o
  length 145
  FMT(vowel/8_2)
endphoneme

phoneme U@
  vwl  starttype #@  endtype #@
  length 250
  ipa ʊ|ɹ
  IF nextPhW(r-) OR nextPhW(r-2) THEN
    ipa ʊ
  ENDIF
  IfNextVowelAppend(r-2)
  FMT(vwl_en_us/ur)
endphoneme



phoneme O
  vwl  starttype #o  endtype #o
  length 200
  ChangeIfDiminished(@)
  FMT(vowel/aa#)
endphoneme

phoneme O2
  vwl  starttype #o  endtype #o
  length 220
  FMT(vowel/aa#) // Same as /O/, but not diminished.
endphoneme

phoneme O:
  vwl  starttype #o  endtype #o
  length 220
  ChangeIfDiminished(@)
  IF nextPhW(r) THEN
    FMT(vwl_en_us/oor)
  ENDIF
  FMT(vowel/0_3)
endphoneme

phoneme OI
  vwl  starttype #o  endtype #i
  length 270
  FMT(vdiph/ooi_3)
endphoneme

phoneme O@
  vwl  starttype #o  endtype #@
  length 250
  ipa ɔː|ɹ
  IF nextPhW(r) THEN
    ipa ɔː
  ENDIF
  IfNextVowelAppend(r)
  FMT(vwl_en_us/oor)
endphoneme

phoneme 0
  vwl  starttype #a   endtype #a
  length 220
  ipa ɑː
  ChangeIfDiminished(@)
  IF nextPh(r) THEN
    ChangePhoneme(O:)
  ENDIF
  FMT(vowel/aa_8)
endphoneme

phoneme 02   // becomes V in en-us
  vwl  starttype #o  endtype #o
  length 140
  ChangePhoneme(V)
endphoneme

phoneme o@
  vwl  starttype #o  endtype #@
  length 250
  ipa oː|ɹ
  IF nextPhW(r) THEN
    ipa oː
  ENDIF
  IfNextVowelAppend(r)
  FMT(vwl_en_us/or)
endphoneme

phoneme oU
  vwl  starttype #@  endtype #u
  length 230
  FMT(vdiph/8u)
endphoneme



phoneme @    //  Schwa
  vwl   starttype #@  endtype #@
  unstressed
  length 130
  IF nextPh(isRhotic) THEN
    ChangePhoneme(3)
  ENDIF
  IF thisPh(isWordEnd) THEN
    FMT(vowel/@_6)
  ENDIF
  FMT(vowel/@_4)
endphoneme


// phoneme 3 : the root file uses the US version


phoneme 3:
  vwl  starttype #@  endtype #@
  ipa ɜː|ɹ // G : To make things easier, we add the rhotic mark to ipa
  length 210
  IfNextVowelAppend(r-)
  ChangeIfDiminished(3)
  FMT(vwl_en_us/3_us2)
endphoneme




