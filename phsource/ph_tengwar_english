// List of phonemes used by espeak specifically for english

/////////////////////////
// MODIFIED CONSONANTS //
/////////////////////////

// t2 : [t] which does not reduce
//    : en-us + en-gb + en-rp
//    : autopsy, autism, secretary, etc ...

phoneme t2   // [t] which doesn't reduce
  vcd alv stp
  ChangePhoneme(t)
endphoneme

// t# : reduced [t] is 
//    : en-us only
//    : en-gb/en-rp changes to standard [t]
//    : example : city

// G : We keep it and treat it as a standard t
phoneme t#    // reduced [t] as in "city" in en-us
  vcd alv stp
  ChangePhoneme(t)
endphoneme

// d# : becomes [d] if preceded by voiced phoneme, [t] if not 
//    : en-us + en-gb + en-rp
//    : typical : suffix -d and -ed
//    : example : rageD vs bakeD

phoneme d#    // change to [d] or [t] depending on whether previous phoneme is voiced
  vls alv stp
  IF prevPh(isVoiced) THEN
    ChangePhoneme(d)
  ELSE
    ChangePhoneme(t)
  ENDIF
endphoneme      
      
// z# : becomes [z] if preceded by voiced phoneme, [s] if not 
//    : en-us + en-gb + en-rp
//    : typical : suffix -es
//    : example : cafes vs slopes
            
phoneme z#    // change to [z] or [s] depending on whether previous phoneme is voiced
  vls alv frc sib
  IF prevPh(isVoiced) THEN
    ChangePhoneme(z)
  ELSE
    ChangePhoneme(s)
  ENDIF
endphoneme            

// l  : changes to dark [l/2] before not-vowel (pure phonetics)
//    : en-us + en-gb + en-rp

phoneme l      // use dark [l/2] before not-vowel
  liquid
  lengthmod 7

  IF NOT nextPhW(isVowel) THEN
    IF prevPh(isVowel) OR prevPh(j) OR prevPh(w) THEN
      ChangePhoneme(l/2)
    ELSE
      ChangePhoneme(l/)
    ENDIF
  ENDIF

  CALL base1/l
endphoneme

// r- : linking r (ipa ɹ) 
//    : changes to r if not at word end and not preceded by schwa and not preceded by rhotic schwa
//    : mainly used as a sub-tool for treating certain vowels, schwas and diphtongs
//    : en-us + en-gb + en-rp
//    : examples : overage, -aring, -europe-

phoneme r-   // linking r, used in English between certain vowels and a following vowel
  liquid rhotic
  ipa ɹ
  
  IF NOT thisPh(isWordEnd) AND NOT prevPh(@) AND NOT prevPh(3) THEN
    ChangePhoneme(r)
  ENDIF
  
  lengthmod 0

  NextVowelStarts
    VowelStart(r2/r2@)
    VowelStart(r2/r2a)
    VowelStart(r2/r2e)
    VowelStart(r2/r2i)
    VowelStart(r2/r2o)
    VowelStart(r2/r2u)
  EndSwitch

  IF prevPh(isVowel) THEN
    VowelEnding(r/xr, -60)
  ENDIF

  FMT(r/r)
endphoneme

// z/2 : used for 's suffix
//     : adds I2 if previous phoneme is sibilant
//     : changes to s if not previous phoneme is voiced
//     : else changes to phoneme z
//     : en-us + en-gb + en-rp

phoneme z/2    // used for 's suffix
  vcd alv frc sib
  lengthmod 6
  IF prevPh(isSibilant) THEN
    InsertPhoneme(I2)
  ENDIF

  IF NOT prevPh(isVoiced) THEN
    ChangePhoneme(s)
  ENDIF
  ChangePhoneme(z)
endphoneme

// w#  : pronounced wh (ipa ʍ)
//     : en-us + en-gb + en-rp
//     : example : where

phoneme w#
  vls glt apr  // [h]
  ipa ʍ
  
  IF nextPh(isVowel) THEN
    NextVowelStarts
      VowelStart(w/w@)
      VowelStart(w/wa)
      VowelStart(w/we)
      VowelStart(w/wi)
      VowelStart(w/wo)
      VowelStart(w/wu)
    EndSwitch
  ENDIF

  WAV(h/hu, 70)
endphoneme

// n   : normal n
//     : changes to velarized n if preceding a velar phoneme
//     : en-us + en-gb + en-rp
//     : example : include, income

phoneme n
  vcd alv nas
  ipa n
  IF nextPh(isVelar) THEN // /n/ is velarized to /N/ when before velar stops
    // G: Introduce here a variant N2 of N to make the distinction
    ChangePhoneme(N2)
  ENDIF
  CALL base1/n
endphoneme

phoneme N2
  CALL N
  ipa n‿
endphoneme


////////////
// VOWELS //
////////////

// @ : schwa
//   : 
//   : examples : 
//   : not in diphtongs : patina (p@raI@), pegasus (pEg@s@s), pejorative (p@dZ0r@tIv), pencil ()
//   : in diphtongs, always indicates presence of r : pear (pe@), pier (pi@3)

// G : Taken from US
phoneme 3    //  Schwa, used for rhotic schwa in American
  vwl   starttype #@  endtype #@
  ipa ɚ
  unstressed
  length 210
  IfNextVowelAppend(r-)
  FMT(vwl_en_us/3_us)
endphoneme

// G : use that phoneme at the end of words finishing 
// by a schwa followed by a word beginning with a r
phoneme 32
  CALL 3
  ipa ɚ‿
endphoneme

// G : Taken from US
phoneme @    //  Schwa
  vwl   starttype #@  endtype #@
  unstressed
  length 130
  // G: CHANGED! nextPh > nextPhW, we don't want "america rules" with a rothic schwa at the end.
  IF nextPhW(isRhotic) THEN 
    ChangePhoneme(3)
  ENDIF
  // G: CHANGED! "america rules" with a rothic schwa at the end, but marked differently
  IF nextPh(isRhotic) AND thisPh(isWordEnd) THEN
    ChangePhoneme(32)   
  ENDIF
  IF thisPh(isWordEnd) THEN
    FMT(vowel/@_6)
  ENDIF
  FMT(vowel/@_4)
endphoneme

// G : Taken from US to keep coherency 
// (it should not turn into a normal schwa and be re-treated)
// This can be reconsidered, since now we've changed 
// the schwa behaviour which could be compatible
// Schwa, changes to I before a vowel. th**e**, used only for "the".
phoneme @2   
  vwl  starttype #@  endtype #@
  unstressed
  length 120
  IF nextPh(isVowel) THEN
    ChangePhoneme(I2)
  ENDIF
  FMT(vowel/@_low2)
endphoneme

// G : Taken from  EN (keep it)
// @5: Schwa, changes to U before a vowel. t**o**, used only for "to".
phoneme @5   
  vwl  starttype #@  endtype #@
  unstressed
  length 140
  IF nextPh(isVowel) OR nextPh(isPause) THEN
    ChangePhoneme(U)
  ENDIF
  ChangePhoneme(@)
endphoneme


phoneme @L // simp**le**
  vwl  starttype #@  endtype l
  ipa ə|l
  unstressed
  length 160
  CALL vowelstart_l
  FMT(vwl_en/@L)
endphoneme

// G : Taken from US
// Long i th*e* / or Liz's
phoneme I2
  vwl  starttype #i  endtype #i
  unstressed
  length 160
  IfNextVowelAppend(;)
  FMT(vowel/ii#_3)
endphoneme

// TODO
phoneme U
  vwl  starttype #o  endtype #o
  length 150
  
  IF prevPhW(j) THEN
    length 130
    FMT(vowel/8_2)
  ENDIF

  FMT(vowel/uu)
endphoneme




// // 0 : standard /o/ as in dot, stop, comet, etc
// //   : 
// //   :
// phoneme 0
//   // TODO
// endphoneme
// 
// // 0# : /o/ that turns into a schwa when unstressed 
// //    : position before a stressed vowel
// //    : ex : over, consult, product, etc      
// phoneme 0#    // [@] in unstressed syllables
//   // TODO
// endphoneme
// 
// // 02 : /o/ that turns into a V in us accent (!)
// //    : ex: what (US : /hwvt/)
// phoneme 02   // [@] in unstressed syllables
//   // TODO
// endphoneme
// 
// 
// 
// // GB
// phoneme a
//   vwl  starttype #a  endtype #a
//   length 160
//   ChangeIfDiminished(a#)
//   IF thisPh(isUnstressed) THEN
//     FMT(vowel/a_8)
//   ENDIF
//   FMT(vowel/a)
// endphoneme
// phoneme a# // **a**bout. This may be \[@\] or may be a more open schwa.
//   vwl  starttype #@  endtype #@
//   ipa ɐ
//   unstressed
//   length 150
//   
//   IF NOT thisPh(isUnstressed) THEN
//     ChangePhoneme(a)          // syllable has an explicit stress
//   ENDIF
// 
//   FMT(vowel/a#_3)
// endphoneme
// 
// 
// // US
// phoneme a
//   vwl  starttype #e  endtype #@
//   ipa æ
//   length 210
// 
//   ChangeIfDiminished(a#)
// 
//   IF nextPh(isNasal) AND NOT KlattSynth THEN
//     FMT(vnasal/ee_n2)
//   ELSEIF nextPh(r) AND thisPh(isStressed) THEN
//     length 190
//     FMT(vwl_en_us/ar)
//   ENDIF
//   FMT(vwl_en_us/a)
// endphoneme
// phoneme a#
//   vwl  starttype #@  endtype #@
//   ipa ɐ
//   unstressed
//   length 150
// 
//   IF thisPh(isStressed) THEN
//     ChangePhoneme(a)
//   ENDIF
// 
//   IF nextPhW(r) THEN 
//     ChangePhoneme(3) // arise
//   ENDIF
//   
//   FMT(vowel/a#_3)
// endphoneme
// 
// 
// 
