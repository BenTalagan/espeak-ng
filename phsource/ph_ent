// This is a reconstruction of the RP at the time of JRRTolkien
// It aims at producing a rich IPA for tengwar transcription
//
// Among other principles :
//
// Its vowels are close to the modern RP (and the US pronounciation)
// It tries to keep the trace of the R in rhotic schwas (like in US)
// Linking phonetic phenomena are marked as such




// The four phonemes are virtual chars used as a hack
// For keeping the punctuation in the IPA output.
// The used chars are 0xF8E0,0xF8E1,0xF8E2,0xF8E3

phoneme 
  virtual
  ipa 
endphoneme

phoneme 
  virtual
  ipa 
endphoneme

phoneme 
  virtual
  ipa 
endphoneme

phoneme 
  virtual
  ipa 
endphoneme

////////////////
// CONSONANTS //
////////////////

// t2 : [t] which does not reduce
//    : en-us + en-gb + en-rp
//    : autopsy, autism, secretary, etc ...

phoneme t2   // [t] which doesn't reduce
  vcd alv stp
  ChangePhoneme(t)
endphoneme

// t# : reduced [t] is 
//    : en-us only
//    : en-gb/en-rp changes to standard [t]
//    : example : city

// G : We keep it and treat it as a standard t
phoneme t#    // reduced [t] as in "city" in en-us
  vcd alv stp
  ChangePhoneme(t)
endphoneme

// d# : becomes [d] if preceded by voiced phoneme, [t] if not 
//    : en-us + en-gb + en-rp
//    : typical : suffix -d and -ed
//    : example : rageD vs bakeD

phoneme d#    // change to [d] or [t] depending on whether previous phoneme is voiced
  vls alv stp
  IF prevPh(isVoiced) THEN
    ChangePhoneme(d)
  ELSE
    ChangePhoneme(t)
  ENDIF
endphoneme      
      
// z# : becomes [z] if preceded by voiced phoneme, [s] if not 
//    : en-us + en-gb + en-rp
//    : typical : suffix -es
//    : example : cafes vs slopes
            
phoneme z#    // change to [z] or [s] depending on whether previous phoneme is voiced
  vls alv frc sib
  IF prevPh(isVoiced) THEN
    ChangePhoneme(z)
  ELSE
    ChangePhoneme(s)
  ENDIF
endphoneme            

// l  : changes to dark [l/2] before not-vowel (pure phonetics)
//    : en-us + en-gb + en-rp

phoneme l      // use dark [l/2] before not-vowel
  liquid
  lengthmod 7

  IF NOT nextPhW(isVowel) THEN
    IF prevPh(isVowel) OR prevPh(j) OR prevPh(w) THEN
      ChangePhoneme(l/2)
    ELSE
      ChangePhoneme(l/)
    ENDIF
  ENDIF

  CALL base1/l
endphoneme

// r- : linking r (ipa ɹ) 
//    : changes to r if not at word end and not preceded by schwa and not preceded by rhotic schwa
//    : mainly used as a sub-tool for treating certain vowels, schwas and diphtongs
//    : en-us + en-gb + en-rp
//    : examples : overage, -aring, -europe-

phoneme r-
  liquid rhotic
  ipa ɹ‿
  
  IF NOT thisPh(isWordEnd) AND NOT prevPh(@) AND NOT prevPh(3) THEN
    ChangePhoneme(r)
  ENDIF
  
  lengthmod 0

  NextVowelStarts
    VowelStart(r2/r2@)
    VowelStart(r2/r2a)
    VowelStart(r2/r2e)
    VowelStart(r2/r2i)
    VowelStart(r2/r2o)
    VowelStart(r2/r2u)
  EndSwitch

  IF prevPh(isVowel) THEN
    VowelEnding(r/xr, -60)
  ENDIF

  FMT(r/r)
endphoneme

// z/2 : used for 's suffix
//     : adds I2 if previous phoneme is sibilant
//     : changes to s if not previous phoneme is voiced
//     : else changes to phoneme z
//     : en-us + en-gb + en-rp

phoneme z/2    // used for 's suffix
  vcd alv frc sib
  lengthmod 6
  IF prevPh(isSibilant) THEN
    InsertPhoneme(I2) // insert schwi, "roses"
  ENDIF

  IF NOT prevPh(isVoiced) THEN
    ChangePhoneme(s)
  ENDIF
  ChangePhoneme(z)
endphoneme

// w#  : pronounced wh (ipa ʍ)
//     : en-us + en-gb + en-rp
//     : example : where

phoneme w#
  vls glt apr  // [h]
  ipa ʍ
  
  IF nextPh(isVowel) THEN
    NextVowelStarts
      VowelStart(w/w@)
      VowelStart(w/wa)
      VowelStart(w/we)
      VowelStart(w/wi)
      VowelStart(w/wo)
      VowelStart(w/wu)
    EndSwitch
  ENDIF

  WAV(h/hu, 70)
endphoneme

// n   : normal n
//     : changes to velarized n if preceding a velar phoneme
//     : en-us + en-gb + en-rp
//     : example : include, income

phoneme n
  vcd alv nas
  ipa n
  IF nextPh(isVelar) THEN // /n/ is velarized to /N/ when before velar stops
    // G: Introduce here a variant N2 of N to make the distinction
    ChangePhoneme(N2)
  ENDIF
  CALL base1/n
endphoneme

phoneme N2
  CALL N
  ipa n‿
endphoneme


////////////
// VOWELS //
////////////




/////////
//  A  //
/////////

// G: (BEN) : Taken from the english RP
//        ex : trap
phoneme a
  vwl  starttype #a  endtype #a
  ipa æ
  length 175
  ChangeIfDiminished(a#)
  FMT(vowel/&)
endphoneme

// G: (BEN): For all versions.
//   This is a "a" that does not reduce.
//   Seems very rare, only found in "diffraction"
phoneme a2
  vwl
  ChangePhoneme(a)
endphoneme

// G: (BEN) : Taken from the english RP
//        ex : bath
phoneme aa
  vwl  starttype #a  endtype #a
  ipa ɑː
  length 200
  FMT(vwl_en_rp/aa)
endphoneme

// G: (BEN) : Taken from the english RP
//    Unstressed a, like in **a**bout, or at the end of words, may trigger a linking r
//    This may be \[@\] or may be a more open schwa.
phoneme a#
  vwl  starttype #@  endtype #@
  ipa ɐ
  unstressed
  length 150
  IfNextVowelAppend(r-)
  FMT(vowel/@_low)
endphoneme

// G: (BEN): For all.
//   ex : "an"
phoneme a#2
  vwl
  IF next2Ph(isVowel) THEN
    ChangePhoneme(a#)
  ELSE
    ChangePhoneme(a)
  ENDIF
endphoneme

// G: (BEN): Long [a] (often seen in foreign words)
//    ex: camouflage
//
phoneme A:
  vwl  starttype #a  endtype #a
  length 240
  IfNextVowelAppend(r-) // grandpa igor
  FMT(vwl_en_rp/aa)
endphoneme

// G: (BEN): Long [a] followed by a r
//    ex: bar
phoneme A@
  vwl  starttype #a  endtype #a
  ipa ɑː // bar open
  length 240
  IfNextVowelAppend(r-)
  FMT(vwl_en_rp/aa)
endphoneme

// G: An "a" that lenghtens in american accent ([a] in British but [A:] in American)
//   ex: The first a of "mama"
phoneme A#  
  vwl  starttype #a  endtype #a
  ChangePhoneme(a)
endphoneme

// G: An [a] that sounds nasal (french words)
phoneme A~
  vwl  starttype #a endtype #a
  length 260
  FMT(vnasal/aa_n2)
endphoneme


phoneme aI
  vwl  starttype #a  endtype #i
  length 230
  IF nextPh(#a) OR nextPh(#o) THEN
    AppendPhoneme(;)
  ENDIF
  FMT(vdiph/ai_6)
endphoneme

phoneme aI3
  vwl  starttype #a  endtype #@
  length 280
  ChangePhoneme(aI@)
endphoneme

// science : TODO REWORK OR NOT ?
phoneme aI@
  vwl  starttype #a  endtype #@
  length 270
  IfNextVowelAppend(r-)
  FMT(vwl_en/aI@)
endphoneme

phoneme aU
  vwl  starttype #a  endtype #u
  length 230
  FMT(vdiph/au_3)
endphoneme

// Hum, what's this.'
// Cannot find any example for this or any word in the dict.
// TODO : try harder
phoneme aU@
  vwl  starttype #a   endtype #@
  length 270
  IfNextVowelAppend(r-)
  FMT(vwl_en_rp/aU@)
endphoneme


/////////
//  E  //
/////////

phoneme e# // **E**XPLORE
  vwl
  ChangePhoneme(I)
endphoneme

phoneme e:
  vwl  starttype #e  endtype #e
  length 210
  FMT(vowel/e)
endphoneme

phoneme E
  vwl  starttype #e  endtype #e
  length 140
  IF nextPhW(n) THEN
    ChangeIfDiminished(@)
  ELSE
    ChangeIfDiminished(I2)
  ENDIF
  FMT(vowel/e_mid)
endphoneme

// [@] in unstressed syllables, if next vowel is stressed
phoneme E#
  vwl  starttype #e  endtype #e

  IF thisPh(isUnstressed) AND nextVowel(isVowel) AND nextVowel(isStressed) THEN
    ChangePhoneme(@)
  ENDIF

  ChangePhoneme(E)
endphoneme

phoneme E2  // does not reduce in unstressed syllables
  vwl  starttype #e  endtype #e
  length 140
  ChangePhoneme(E)  // a second change ([E]  to [I2]) won't happen
endphoneme

// TODO : PROBABLY REWORK TO MAKE IT WORK MORE LIKE US
phoneme e@
  vwl  starttype #e  endtype #@
  length 220
  IfNextVowelAppend(r-)
  FMT(vdiph2/ee@_2)
endphoneme

phoneme eI
  vwl  starttype #i  endtype #i
  length 220
  FMT(vdiph2/ei_2)
endphoneme


/////////
//  I  //
/////////

phoneme i
  vwl  starttype #i  endtype #i
  unstressed
  ipa ɪ
  length 140
  IfNextVowelAppend(;)

  IF NOT thisPh(isFinalVowel) THEN
    length 130
    FMT(vowel/ii)
  ENDIF

  FMT(vowel/ii_final)
endphoneme

phoneme i:
  vwl  starttype #i  endtype #i
  length 175 lng
  IfNextVowelAppend(;)
  IF prevPh(w) THEN
    VowelStart(w/wi2)
  ENDIF
  FMT(vowel/i)
endphoneme

phoneme I
  vwl  starttype #i endtype #i
  length 130
  IfNextVowelAppend(;)
  FMT(vowel/ii)
endphoneme

// G : Taken from US
// Schwa i in : th*e* + vowel / or for genitives like Liz's
phoneme I2
  vwl  starttype #i  endtype #i
  unstressed
  length 160
  IfNextVowelAppend(;) // Make it long before vowels.
  FMT(vowel/ii#_3)
endphoneme

// G : (BEN) : to review!
// used for [I] which may be [@] in some accents
phoneme I#  
  vwl  starttype #i  endtype #i
  unstressed
  length 130
  
  IF MbrolaSynth THEN
    ChangePhoneme(I)
  ENDIF

  IfNextVowelAppend(;)
  ChangePhoneme(I2)
endphoneme

// G : (BEN) : to review!
// used for [I] in -ed adjectives which may be [E] in some accents
phoneme I2#   
  vwl  starttype #@  endtype #@
  unstressed

  IfNextVowelAppend(;)
  ChangePhoneme(I2)
endphoneme


// used for "ir" when [3:] is split (Scottish)
phoneme IR        
  vwl  starttype #@  endtype #@
  length 190
  ipa əɹ
  IF nextPhW(r-) THEN
    ipa ə
  ENDIF
  IfNextVowelAppend(r-)
  FMT(vowelr/V_r)
endphoneme

phoneme i@
  vwl  starttype #i  endtype #@
  length 240
  IfNextVowelAppend(r-)
  FMT(vwl_en_rp/i@)
endphoneme

phoneme i@3
  vwl  starttype #i  endtype #@
  length 240
  IfNextVowelAppend(r-)
  FMT(vwl_en_rp/i@)
endphoneme


/////////
//  U  //
/////////

phoneme V
  vwl  starttype #a  endtype #@
  length 140
  ChangeIfDiminished(@)
  FMT(vowel/V_3)
endphoneme

phoneme VR        // used for "or"/"ur" when [3:] is split (Scottish)
  vwl  starttype #@  endtype #@
  length 210
  ipa ʌɹ
  IF nextPhW(r-) THEN
    ipa ʌ
  ENDIF
  IfNextVowelAppend(r-)
  FMT(vowelr/V3_r)
endphoneme

phoneme u:
  vwl  starttype #u  endtype #u
  length 190
  FMT(vowel/uu#_2)
endphoneme

phoneme U
  vwl  starttype #o  endtype #o
  length 150
  FMT(vowel/o-_3)
endphoneme

// THIS IS PROBABLY WRONG. THE r of the shwa should be kept in our JRRT RP
// TODO : REWORK THIS
phoneme U@
  vwl  starttype #u  endtype #@
  ipa ɔː
  length 230
  IfNextVowelAppend(r-)
  FMT(vowel/o_mid)
endphoneme



/////////
//  O  //
/////////

phoneme o:
  vwl  starttype #o  endtype #o
  length 220
  FMT(vowel/o)
endphoneme

phoneme O
  vwl  starttype #o  endtype #o
  length 150
  ChangeIfDiminished(@)
  FMT(vowel/oo_en)
endphoneme

phoneme O2
  vwl  starttype #o  endtype #o
  length 140
  ChangePhoneme(0)
endphoneme

phoneme O:
  vwl  starttype #o  endtype #o
  length 230
  ChangeIfDiminished(@)
  IfNextVowelAppend(r-)
  FMT(vowel/oo_1)
endphoneme

phoneme OI
  vwl  starttype #o  endtype #i
  length 230
  FMT(vdiph/ooi_3)
endphoneme

phoneme O~
  vwl  starttype #o  endtype #o
  length 240
  FMT(vnasal/oo_n2)
endphoneme

// THIS IS PROBABLY WRONG. THE r of the shwa should be kept in our JRRT RP
// TODO : REWORK THIS
phoneme O@
  vwl  starttype #o  endtype #@
  ipa ɔː
  length 230
  IfNextVowelAppend(r-)
  FMT(vowel/oo_1)
endphoneme

phoneme 0
  vwl  starttype #o   endtype #o
  length 140
  ChangeIfDiminished(@)
  FMT(vowel/0_3)
endphoneme

// A [O] that turns to [@] in unstressed syllables
phoneme 0#    
  vwl  starttype #o  endtype #o

  IF thisPh(isUnstressed) AND nextVowel(isVowel) AND NOT nextVowel(isUnstressed) THEN
    ChangePhoneme(@)
  ENDIF

  ChangePhoneme(0)
endphoneme

phoneme 02   // becomes V in en-us
  vwl  starttype #o  endtype #o
  length 140
  ChangePhoneme(0)
endphoneme

phoneme o@
  vwl  starttype #o  endtype #o
  ipa ɔː
  length 250
  
  IF MbrolaSynth THEN
    ChangePhoneme(O@)
  ENDIF

  IfNextVowelAppend(r-)
  FMT(vowel/oo_en)
endphoneme

phoneme oU
  vwl  starttype #@  endtype #u
  ipa əʊ
  length 220
  FMT(vdiph/@u_2)
endphoneme

phoneme oU#
  vwl
  IF thisPh(isStressed) THEN
    ChangePhoneme(0)
  ENDIF
  
  IF nextVowel(isStressed) OR prevVowel(isStressed) THEN
    ChangePhoneme(@)
  ENDIF
  
  ChangePhoneme(oU)
endphoneme

////////////
// SCHWAS //
////////////



// G : Taken from US
phoneme 3    //  Schwa, used for rhotic schwa in American
  vwl   starttype #@  endtype #@
  ipa ɚ
  unstressed
  length 210
  IfNextVowelAppend(r-)
  FMT(vwl_en_us/3_us)
endphoneme

// G : use that phoneme at the end of words finishing 
//   by a schwa followed by a word beginning with a r
//   It becomes a rhotic schwa but the only reason is the linking with the next word in r
//   Ex: america rules

phoneme 32
  CALL 3
  ipa ɚ‿
endphoneme

// @ : schwa
//   : 
//   : examples : 
//   : not in diphtongs : patina (p@raI@), pegasus (pEg@s@s), pejorative (p@dZ0r@tIv), pencil ()
//   : in diphtongs, always indicates presence of r : pear (pe@), pier (pi@3)
// G : Taken from US, classic schwa
phoneme @    //  Schwa
  vwl   starttype #@  endtype #@
  unstressed
  length 130
  // G: CHANGED! nextPh > nextPhW, we want to treat the end of word case separately.
  IF nextPhW(isRhotic) THEN 
    ChangePhoneme(3)
  ENDIF
  // G: CHANGED! "america rules" with a rothic schwa at the end, but marked differently for better precision
  IF nextPh(isRhotic) AND thisPh(isWordEnd) THEN
    ChangePhoneme(32)   
  ENDIF
  IF thisPh(isWordEnd) THEN
    FMT(vowel/@_6)
  ENDIF
  FMT(vowel/@_4)
endphoneme

// G : Taken from US to keep coherency 
// (it should not turn into a normal schwa and be re-treated)
// This can be reconsidered, since now we've changed 
// the schwa behaviour which could be compatible
// Schwa, changes to I before a vowel. th**e**, used only for "the".
phoneme @2   
  vwl  starttype #@  endtype #@
  unstressed
  length 120
  IF nextPh(isVowel) THEN
    ChangePhoneme(I2) // Schwi before vowels "the age"
  ENDIF
  FMT(vowel/@_low2)
endphoneme

// G : Taken from  EN (keep it)
// @5: Schwa, changes to U before a vowel. t**o**, used only for "to".
phoneme @5   
  vwl  starttype #@  endtype #@
  unstressed
  length 140
  IF nextPh(isVowel) OR nextPh(isPause) THEN
    ChangePhoneme(U) // Ex : "to Isengard" (vowel), "nowhere to go to" (pause)
  ENDIF
  ChangePhoneme(@)
endphoneme


phoneme @L // simp**le**
  vwl  starttype #@  endtype l
  ipa ə|l
  unstressed
  length 160
  CALL vowelstart_l
  FMT(vwl_en/@L)
endphoneme


phoneme 3:
  vwl  starttype #@  endtype #@
  ipa ɜː|ɹ // G : To make things easier, we add the rhotic mark to ipa
  length 210
  ChangeIfDiminished(@)
  IfNextVowelAppend(r-)
  FMT(vowel/3_3)
endphoneme

// TEST: [@] which is slightly more 'front'
phoneme @#   
  vwl  starttype #i  endtype #i
  unstressed
  length 130
  FMT(vowel/@_3)
endphoneme



